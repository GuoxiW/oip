// Code generated by protoc-gen-go. DO NOT EDIT.
// source: RecordTemplateProto.proto

package oip5

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RecordTemplateProto struct {
	// Human readable name to quickly identify type (non-unique)
	FriendlyName string `protobuf:"bytes,1,opt,name=friendlyName" json:"friendlyName,omitempty"`
	// Description of the purpose behind this new type
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	// Compiled descriptor including dependencies; Defines fields
	DescriptorSetProto []byte `protobuf:"bytes,4,opt,name=DescriptorSetProto,proto3" json:"DescriptorSetProto,omitempty"`
	// List of unique template identifiers required for use with this template
	Extends []uint32 `protobuf:"fixed32,13,rep,packed,name=extends" json:"extends,omitempty"`
	// Populated by oipd with the unique identifier for this type
	Identifier uint32 `protobuf:"fixed32,10,opt,name=identifier" json:"identifier,omitempty"`
}

func (m *RecordTemplateProto) Reset()                    { *m = RecordTemplateProto{} }
func (m *RecordTemplateProto) String() string            { return proto.CompactTextString(m) }
func (*RecordTemplateProto) ProtoMessage()               {}
func (*RecordTemplateProto) Descriptor() ([]byte, []int) { return fileDescriptor5, []int{0} }

func (m *RecordTemplateProto) GetFriendlyName() string {
	if m != nil {
		return m.FriendlyName
	}
	return ""
}

func (m *RecordTemplateProto) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *RecordTemplateProto) GetDescriptorSetProto() []byte {
	if m != nil {
		return m.DescriptorSetProto
	}
	return nil
}

func (m *RecordTemplateProto) GetExtends() []uint32 {
	if m != nil {
		return m.Extends
	}
	return nil
}

func (m *RecordTemplateProto) GetIdentifier() uint32 {
	if m != nil {
		return m.Identifier
	}
	return 0
}

func init() {
	proto.RegisterType((*RecordTemplateProto)(nil), "oipProto.RecordTemplateProto")
}

func init() { proto.RegisterFile("RecordTemplateProto.proto", fileDescriptor5) }

var fileDescriptor5 = []byte{
	// 219 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xb1, 0x4a, 0x04, 0x31,
	0x10, 0x86, 0x89, 0x1e, 0xee, 0x39, 0xee, 0x81, 0xc4, 0x26, 0x36, 0x12, 0xae, 0x90, 0x54, 0x7b,
	0x85, 0x58, 0xd9, 0x89, 0x95, 0x85, 0x48, 0xb4, 0xb2, 0xbb, 0xdb, 0xcc, 0x9d, 0x03, 0x9b, 0x4c,
	0xc8, 0xe6, 0x50, 0x9f, 0xd1, 0x97, 0x92, 0x04, 0x85, 0x13, 0xb6, 0xf9, 0x99, 0xef, 0x9b, 0x9f,
	0x29, 0x06, 0x2e, 0x2d, 0xf6, 0x9c, 0xdc, 0x2b, 0xfa, 0x38, 0xac, 0x33, 0x3e, 0x27, 0xce, 0xdc,
	0xc5, 0x92, 0x72, 0xce, 0x14, 0x2b, 0x2f, 0xbf, 0x05, 0x5c, 0x4c, 0xf4, 0xe4, 0x12, 0xda, 0x6d,
	0x22, 0x0c, 0x6e, 0xf8, 0x7a, 0x5a, 0x7b, 0x54, 0x42, 0x0b, 0x73, 0x6a, 0xff, 0x39, 0xa9, 0xe1,
	0xcc, 0xe1, 0xd8, 0x27, 0x8a, 0x99, 0x38, 0xa8, 0xa3, 0x5a, 0x39, 0x54, 0xb2, 0x03, 0xf9, 0xf0,
	0x8b, 0x9c, 0x5e, 0x30, 0xd7, 0xdb, 0x6a, 0xa6, 0x85, 0x69, 0xed, 0xc4, 0x46, 0x2a, 0x68, 0xf0,
	0x33, 0x63, 0x70, 0xa3, 0x5a, 0xe8, 0x63, 0xd3, 0xd8, 0x3f, 0x94, 0x57, 0x00, 0xe4, 0x30, 0x64,
	0xda, 0x12, 0x26, 0x05, 0x5a, 0x98, 0xc6, 0x1e, 0x98, 0xc7, 0xd9, 0xbc, 0x3d, 0x5f, 0xdc, 0x9b,
	0xb7, 0xeb, 0x1d, 0xe5, 0xf7, 0xfd, 0xa6, 0xeb, 0xd9, 0xaf, 0x98, 0xe2, 0xc7, 0xae, 0xe4, 0xca,
	0xb3, 0xdb, 0x0f, 0x38, 0x96, 0xf9, 0xf6, 0xae, 0xc4, 0xe6, 0xa4, 0x3e, 0xe2, 0xe6, 0x27, 0x00,
	0x00, 0xff, 0xff, 0x1a, 0x94, 0x2b, 0x81, 0x25, 0x01, 0x00, 0x00,
}
