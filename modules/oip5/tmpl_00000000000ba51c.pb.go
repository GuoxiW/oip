// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tmpl_00000000000ba51c.proto

package oip5

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Tmpl_00000000000BA51C struct {
	// Record title
	Title string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	// Record description
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	// Original publication year
	Year int64 `protobuf:"varint,3,opt,name=year" json:"year,omitempty"`
}

func (m *Tmpl_00000000000BA51C) Reset()                    { *m = Tmpl_00000000000BA51C{} }
func (m *Tmpl_00000000000BA51C) String() string            { return proto.CompactTextString(m) }
func (*Tmpl_00000000000BA51C) ProtoMessage()               {}
func (*Tmpl_00000000000BA51C) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{0} }

func (m *Tmpl_00000000000BA51C) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Tmpl_00000000000BA51C) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Tmpl_00000000000BA51C) GetYear() int64 {
	if m != nil {
		return m.Year
	}
	return 0
}

func init() {
	proto.RegisterType((*Tmpl_00000000000BA51C)(nil), "oip5.record.templates.tmpl_00000000000BA51C")
}

func init() { proto.RegisterFile("tmpl_00000000000ba51c.proto", fileDescriptor6) }

var fileDescriptor6 = []byte{
	// 145 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2e, 0xc9, 0x2d, 0xc8,
	0x89, 0x37, 0x40, 0x80, 0xa4, 0x44, 0x53, 0xc3, 0x64, 0xbd, 0x82, 0xa2, 0xfc, 0x92, 0x7c, 0x21,
	0xd1, 0xfc, 0xcc, 0x02, 0x53, 0xbd, 0xa2, 0xd4, 0xe4, 0xfc, 0xa2, 0x14, 0xbd, 0x92, 0xd4, 0xdc,
	0x82, 0x9c, 0xc4, 0x92, 0xd4, 0x62, 0xa5, 0x64, 0x2e, 0x51, 0x74, 0x5d, 0x4e, 0x8e, 0xa6, 0x86,
	0xce, 0x42, 0x22, 0x5c, 0xac, 0x25, 0x99, 0x25, 0x39, 0xa9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c,
	0x41, 0x10, 0x8e, 0x90, 0x02, 0x17, 0x77, 0x4a, 0x6a, 0x71, 0x72, 0x51, 0x66, 0x41, 0x49, 0x66,
	0x7e, 0x9e, 0x04, 0x13, 0x58, 0x0e, 0x59, 0x48, 0x48, 0x88, 0x8b, 0xa5, 0x32, 0x35, 0xb1, 0x48,
	0x82, 0x59, 0x81, 0x51, 0x83, 0x39, 0x08, 0xcc, 0x76, 0x62, 0x8b, 0x62, 0x01, 0xd9, 0x9e, 0xc4,
	0x06, 0x76, 0x8a, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x8c, 0xae, 0xa5, 0xd6, 0xa9, 0x00, 0x00,
	0x00,
}
